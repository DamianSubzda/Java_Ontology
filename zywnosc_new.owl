Prefix(:=<http://www.semanticweb.org/damian/ontologies/2022/11/untitled-ontology-6#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)


Ontology(<http://www.semanticweb.org/damian/ontologies/2022/11/untitled-ontology-6>

Declaration(Class(:Białko))
Declaration(Class(:Cukier))
Declaration(Class(:Jedzenie))
Declaration(Class(:Kalorie))
Declaration(Class(:Mięso))
Declaration(Class(:Nabiał))
Declaration(Class(:Owoce))
Declaration(Class(:Słodycze))
Declaration(Class(:Tłuszcze))
Declaration(Class(:Wartości_Odżywcze))
Declaration(Class(:Warzywa))
Declaration(Class(:Witaminy))
Declaration(Class(:Woda))
Declaration(Class(:Węglowodany))
Declaration(ObjectProperty(:posiada_tłuszcz))
Declaration(ObjectProperty(:posiada_weglowodany))
Declaration(ObjectProperty(:posiada_witaminy))
Declaration(DataProperty(:posiada_białko))
Declaration(DataProperty(:posiada_cukier))
Declaration(DataProperty(:posiada_ilość_kalorii))
Declaration(NamedIndividual(:A))
Declaration(NamedIndividual(:B1))
Declaration(NamedIndividual(:B12))
Declaration(NamedIndividual(:B2))
Declaration(NamedIndividual(:B6))
Declaration(NamedIndividual(:C))
Declaration(NamedIndividual(:D))
Declaration(NamedIndividual(:E))
Declaration(NamedIndividual(:K))
Declaration(NamedIndividual(:PP))
Declaration(NamedIndividual(:Proste))
Declaration(NamedIndividual(:Roślinne))
Declaration(NamedIndividual(:Zwierzęce))
Declaration(NamedIndividual(:Złożone))
Declaration(NamedIndividual(:test))
SubClassOf(:Białko :Wartości_Odżywcze)
SubClassOf(:Cukier :Wartości_Odżywcze)
DisjointClasses(:Jedzenie :Wartości_Odżywcze)
SubClassOf(:Kalorie :Wartości_Odżywcze)
EquivalentClasses(:Mięso ObjectIntersectionOf(:Jedzenie ObjectSomeValuesFrom(:posiada_tłuszcz ObjectOneOf(:Zwierzęce)) ObjectSomeValuesFrom(:posiada_weglowodany ObjectOneOf(:Złożone)) ObjectSomeValuesFrom(:posiada_witaminy ObjectOneOf(:B12 :B6 :B1 :B2)) DataSomeValuesFrom(:posiada_ilość_kalorii DatatypeRestriction(xsd:int xsd:minExclusive "100"^^xsd:int)) DataHasValue(:posiada_białko "true"^^xsd:boolean) DataHasValue(:posiada_cukier "false"^^xsd:boolean)))
SubClassOf(:Mięso :Jedzenie)
EquivalentClasses(:Nabiał ObjectIntersectionOf(:Jedzenie ObjectSomeValuesFrom(:posiada_tłuszcz ObjectOneOf(:Roślinne)) ObjectSomeValuesFrom(:posiada_weglowodany ObjectOneOf(:Złożone)) ObjectSomeValuesFrom(:posiada_witaminy ObjectOneOf(:B12 :B6 :D :E :B1 :B2 :A)) DataSomeValuesFrom(:posiada_ilość_kalorii DatatypeRestriction(xsd:int xsd:minExclusive "0"^^xsd:int)) DataHasValue(:posiada_białko "true"^^xsd:boolean) DataHasValue(:posiada_cukier "false"^^xsd:boolean)))
SubClassOf(:Nabiał :Jedzenie)
EquivalentClasses(:Owoce ObjectIntersectionOf(:Jedzenie ObjectSomeValuesFrom(:posiada_tłuszcz ObjectOneOf(:Roślinne)) ObjectSomeValuesFrom(:posiada_weglowodany ObjectOneOf(:Proste)) ObjectSomeValuesFrom(:posiada_witaminy ObjectOneOf(:C :B12 :B6 :B1 :B2 :A)) DataSomeValuesFrom(:posiada_ilość_kalorii DatatypeRestriction(xsd:int xsd:minExclusive "50"^^xsd:int)) DataHasValue(:posiada_białko "false"^^xsd:boolean) DataHasValue(:posiada_cukier "true"^^xsd:boolean)))
SubClassOf(:Owoce :Jedzenie)
EquivalentClasses(:Słodycze ObjectIntersectionOf(:Jedzenie ObjectSomeValuesFrom(:posiada_weglowodany ObjectOneOf(:Proste)) DataSomeValuesFrom(:posiada_ilość_kalorii DatatypeRestriction(xsd:int xsd:minExclusive "100"^^xsd:int)) DataHasValue(:posiada_białko "false"^^xsd:boolean) DataHasValue(:posiada_cukier "true"^^xsd:boolean)))
SubClassOf(:Słodycze :Jedzenie)
EquivalentClasses(:Tłuszcze ObjectOneOf(:Roślinne :Zwierzęce))
SubClassOf(:Tłuszcze :Wartości_Odżywcze)
EquivalentClasses(:Warzywa ObjectIntersectionOf(:Jedzenie ObjectSomeValuesFrom(:posiada_tłuszcz ObjectOneOf(:Roślinne)) ObjectSomeValuesFrom(:posiada_weglowodany ObjectOneOf(:Złożone)) ObjectSomeValuesFrom(:posiada_witaminy ObjectOneOf(:K :C :B12 :B6 :E :B1 :B2 :PP)) DataSomeValuesFrom(:posiada_ilość_kalorii DatatypeRestriction(xsd:int xsd:minExclusive "0"^^xsd:int)) DataHasValue(:posiada_białko "false"^^xsd:boolean) DataHasValue(:posiada_cukier "false"^^xsd:boolean)))
SubClassOf(:Warzywa :Jedzenie)
EquivalentClasses(:Witaminy ObjectOneOf(:K :C :B12 :B6 :D :E :B1 :B2 :PP :A))
SubClassOf(:Witaminy :Wartości_Odżywcze)
EquivalentClasses(:Woda ObjectIntersectionOf(:Jedzenie DataHasValue(:posiada_białko "false"^^xsd:boolean) DataHasValue(:posiada_cukier "false"^^xsd:boolean) DataHasValue(:posiada_ilość_kalorii "0"^^xsd:integer)))
SubClassOf(:Woda :Jedzenie)
EquivalentClasses(:Węglowodany ObjectOneOf(:Złożone :Proste))
SubClassOf(:Węglowodany :Wartości_Odżywcze)
AsymmetricObjectProperty(:posiada_tłuszcz)
IrreflexiveObjectProperty(:posiada_tłuszcz)
ObjectPropertyDomain(:posiada_tłuszcz :Jedzenie)
ObjectPropertyRange(:posiada_tłuszcz :Tłuszcze)
AsymmetricObjectProperty(:posiada_weglowodany)
IrreflexiveObjectProperty(:posiada_weglowodany)
ObjectPropertyDomain(:posiada_weglowodany :Jedzenie)
ObjectPropertyRange(:posiada_weglowodany :Węglowodany)
AsymmetricObjectProperty(:posiada_witaminy)
IrreflexiveObjectProperty(:posiada_witaminy)
ObjectPropertyDomain(:posiada_witaminy :Jedzenie)
ObjectPropertyRange(:posiada_witaminy :Witaminy)
FunctionalDataProperty(:posiada_białko)
DataPropertyDomain(:posiada_białko :Jedzenie)
DataPropertyRange(:posiada_białko xsd:boolean)
FunctionalDataProperty(:posiada_cukier)
DataPropertyDomain(:posiada_cukier :Jedzenie)
DataPropertyRange(:posiada_cukier xsd:boolean)
FunctionalDataProperty(:posiada_ilość_kalorii)
DataPropertyDomain(:posiada_ilość_kalorii :Jedzenie)
DataPropertyRange(:posiada_ilość_kalorii xsd:int)
ClassAssertion(:Witaminy :A)
ClassAssertion(:Witaminy :B1)
ClassAssertion(:Witaminy :B12)
ClassAssertion(:Witaminy :B2)
ClassAssertion(:Witaminy :B6)
ClassAssertion(:Witaminy :C)
ClassAssertion(:Witaminy :D)
ClassAssertion(:Witaminy :E)
ClassAssertion(:Witaminy :K)
ClassAssertion(:Witaminy :PP)
ClassAssertion(:Węglowodany :Proste)
ClassAssertion(:Tłuszcze :Roślinne)
ClassAssertion(:Tłuszcze :Zwierzęce)
ClassAssertion(:Węglowodany :Złożone)
ClassAssertion(:Jedzenie :asdasdasd)
DataPropertyAssertion(:posiada_białko :asdasdasd "false"^^xsd:boolean)
DataPropertyAssertion(:posiada_cukier :asdasdasd "false"^^xsd:boolean)
DataPropertyAssertion(:posiada_ilość_kalorii :asdasdasd "0"^^xsd:integer)
ObjectPropertyAssertion(:posiada_weglowodany :test :Złożone)
DataPropertyAssertion(:posiada_białko :test "true"^^xsd:boolean)
ClassAssertion(:Jedzenie :wooooda)
DataPropertyAssertion(:posiada_białko :wooooda "false"^^xsd:boolean)
DataPropertyAssertion(:posiada_cukier :wooooda "false"^^xsd:boolean)
DataPropertyAssertion(:posiada_ilość_kalorii :wooooda "0"^^xsd:integer)
DisjointClasses(:Mięso :Nabiał :Owoce :Słodycze :Warzywa :Woda)
DifferentIndividuals(:A :B1 :B12 :B2 :B6 :C :D :E :K :PP :Proste :Roślinne :Zwierzęce :Złożone)
)